---
version: 2.1

orbs:
  win: circleci/windows@2.4.0
  codecov: codecov/codecov@1.0.2

executors:
  golang:
    docker:
      - image: circleci/golang:1.13
  mac:
    macos:
      xcode: 11.4.1

jobs:

  build:
    executor: golang
    steps:
      - checkout
      - run:
          name: Build
          command: |
            make install-tools
            VERSION="$CIRCLE_TAG" make build-all
      - persist_to_workspace:
          root: ./artifacts
          paths:
            - "*"

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GHI_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./artifacts/

  test-linux:
    executor: golang

    steps:
      - checkout
      - run:
          name: Unit tests
          command: |
            go test -race -v -coverprofile coverage.txt -coverpkg ./... ./...
      - codecov/upload:
          file: ./coverage.txt

  test-macos:
    executor: mac

    steps:
      - checkout
      - run:
          name: Download golang
          command: curl -SL https://dl.google.com/go/go1.13.11.darwin-amd64.tar.gz -o go1.13.11.darwin-amd64.tar.gz
      - run:
          name: Extract golang
          command: tar -C ~ -xzf go1.13.11.darwin-amd64.tar.gz
      - run:
          name: Add golang to path
          command: echo 'export PATH=~/go/bin:$PATH' >> $BASH_ENV
      - run:
          name: Unit tests
          command: go test -race -v ./...

  test-windows:
    executor: win/default

    steps:
      - checkout
      - run:
          name: Upgrade golang
          shell: powershell.exe
          command: choco upgrade golang --version=1.13
      - run:
          name: Install GCC
          shell: powershell.exe
          command: choco install mingw
      - run:
          name: Get dependencies
          shell: powershell.exe
          command: go get -v -t -d ./...
      - run:
          name: Unit tests
          shell: powershell.exe
          command: go test -race -v ./...

workflows:
  version: 2
  build_and_test:
    jobs:
      - test-linux:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - test-macos:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - test-windows:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
      - build:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
          requires:
            - test-linux
            - test-macos
            - test-windows
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
